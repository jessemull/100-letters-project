name: Pull Request

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Next.js
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Get Cognito JWT Token
        id: cognito-login
        run: |
          export API_AUTH_TOKEN=$(aws cognito-idp initiate-auth \
            --auth-flow USER_PASSWORD_AUTH \
            --client-id ${{ secrets.COGNITO_USER_POOL_CLIENT_ID_DEV }} \
            --auth-parameters USERNAME=${{ secrets.COGNITO_USER_POOL_USERNAME_DEV }},PASSWORD=${{ secrets.COGNITO_USER_POOL_PASSWORD_DEV }} \
            --query 'AuthenticationResult.IdToken' \
            --output text)
          echo "JWT Token: $API_AUTH_TOKEN"
          echo "API_AUTH_TOKEN=$API_AUTH_TOKEN" >> $GITHUB_ENV

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Next.js
        run: |
          echo "Deploying to development environment"
          NODE_ENV=test npm run prebuild
          ls -la
          ls -la .env.test
          cat .env.test
          echo $API_AUTH_TOKEN
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_DEV }}
          API_URL: ${{ secrets.API_URL_DEV }}
          COGNITO_USER_POOL_CLIENT_ID: ${{ secrets.COGNITO_USER_POOL_CLIENT_ID_DEV }}
          COGNITO_USER_POOL_PASSWORD: ${{ secrets.COGNITO_USER_POOL_PASSWORD_DEV }}
          COGNITO_USER_POOL_USERNAME: ${{ secrets.COGNITO_USER_POOL_USERNAME_DEV }}

  #     - name: Copy Sitemap and Robots Files
  #       run: |
  #         cp public/sitemap.xml out/
  #         cp public/robots.txt out/
  #         cp public/sitemap-0.xml out/

  #     - name: Archive Build Output
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: next-build
  #         path: out
  #         retention-days: 1

  # lint:
  #   name: Lint Code
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Install Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         cache: 'npm'

  #     - name: Install Dependencies
  #       run: npm ci

  #     - name: Run Linting
  #       run: npm run lint

  # test:
  #   name: Run Unit Tests
  #   needs: lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Install Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         cache: 'npm'

  #     - name: Install Dependencies
  #       run: npm ci

  #     - name: Run Jest Tests
  #       run: npm run test

  #     - name: Upload Coverage Report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: coverage-report
  #         path: coverage
  #         retention-days: 7

  #     - name: Coverage Threshold Check
  #       run: |
  #         if [[ $(grep "Statements" coverage/lcov-report/index.html | awk '{print $4}' | tr -d '%') -lt 80 ]]; then
  #           echo "Code coverage is below threshold. Please update test coverage and try again."
  #           exit 1
  #         fi
  
  # e2e_and_lighthouse_tests:
  #   name: Run E2E & Lighthouse Tests
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Install Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '20'
  #         cache: 'npm'

  #     - name: Install Dependencies
  #       run: npm ci

  #     - name: Start Next.js Server Locally
  #       run: |
  #         nohup npm run dev &
  #         sleep 10

  #     - name: Run Cypress Tests
  #       run: |
  #         npx cypress run --config baseUrl=http://localhost:3000

  #     - name: Run Lighthouse Tests
  #       run: |
  #         npx lhci autorun
  #       continue-on-error: true
